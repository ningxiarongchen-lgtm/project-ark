{
  "version": 3,
  "sources": ["../../gantt-task-react/src/types/public-types.ts", "../../gantt-task-react/src/helpers/date-helper.ts", "../../gantt-task-react/src/components/task-list/task-list-header.tsx", "../../gantt-task-react/src/components/task-list/task-list-table.tsx", "../../gantt-task-react/src/components/other/tooltip.tsx", "../../gantt-task-react/src/components/other/vertical-scroll.tsx", "../../gantt-task-react/src/components/task-list/task-list.tsx", "../../gantt-task-react/src/components/grid/grid-body.tsx", "../../gantt-task-react/src/components/grid/grid.tsx", "../../gantt-task-react/src/components/calendar/top-part-of-calendar.tsx", "../../gantt-task-react/src/components/calendar/calendar.tsx", "../../gantt-task-react/node_modules/babel-plugin-transform-async-to-promises/helpers.mjs", "../../gantt-task-react/src/components/other/arrow.tsx", "../../gantt-task-react/src/helpers/bar-helper.ts", "../../gantt-task-react/src/helpers/other-helper.ts", "../../gantt-task-react/src/components/task-item/bar/bar-display.tsx", "../../gantt-task-react/src/components/task-item/bar/bar-date-handle.tsx", "../../gantt-task-react/src/components/task-item/bar/bar-progress-handle.tsx", "../../gantt-task-react/src/components/task-item/bar/bar.tsx", "../../gantt-task-react/src/components/task-item/bar/bar-small.tsx", "../../gantt-task-react/src/components/task-item/milestone/milestone.tsx", "../../gantt-task-react/src/components/task-item/project/project.tsx", "../../gantt-task-react/src/components/task-item/task-item.tsx", "../../gantt-task-react/src/components/gantt/task-gantt-content.tsx", "../../gantt-task-react/src/components/gantt/task-gantt.tsx", "../../gantt-task-react/src/components/other/horizontal-scroll.tsx", "../../gantt-task-react/src/components/gantt/gantt.tsx"],
  "sourcesContent": ["export enum ViewMode {\n  Hour = \"Hour\",\n  QuarterDay = \"Quarter Day\",\n  HalfDay = \"Half Day\",\n  Day = \"Day\",\n  /** ISO-8601 week */\n  Week = \"Week\",\n  Month = \"Month\",\n  Year = \"Year\",\n}\nexport type TaskType = \"task\" | \"milestone\" | \"project\";\nexport interface Task {\n  id: string;\n  type: TaskType;\n  name: string;\n  start: Date;\n  end: Date;\n  /**\n   * From 0 to 100\n   */\n  progress: number;\n  styles?: {\n    backgroundColor?: string;\n    backgroundSelectedColor?: string;\n    progressColor?: string;\n    progressSelectedColor?: string;\n  };\n  isDisabled?: boolean;\n  project?: string;\n  dependencies?: string[];\n  hideChildren?: boolean;\n  displayOrder?: number;\n}\n\nexport interface EventOption {\n  /**\n   * Time step value for date changes.\n   */\n  timeStep?: number;\n  /**\n   * Invokes on bar select on unselect.\n   */\n  onSelect?: (task: Task, isSelected: boolean) => void;\n  /**\n   * Invokes on bar double click.\n   */\n  onDoubleClick?: (task: Task) => void;\n  /**\n   * Invokes on bar click.\n   */\n  onClick?: (task: Task) => void;\n  /**\n   * Invokes on end and start time change. Chart undoes operation if method return false or error.\n   */\n  onDateChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on progress change. Chart undoes operation if method return false or error.\n   */\n  onProgressChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on delete selected task. Chart undoes operation if method return false or error.\n   */\n  onDelete?: (task: Task) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on expander on task list\n   */\n  onExpanderClick?: (task: Task) => void;\n}\n\nexport interface DisplayOption {\n  viewMode?: ViewMode;\n  viewDate?: Date;\n  preStepsCount?: number;\n  /**\n   * Specifies the month name language. Able formats: ISO 639-2, Java Locale\n   */\n  locale?: string;\n  rtl?: boolean;\n}\n\nexport interface StylingOption {\n  headerHeight?: number;\n  columnWidth?: number;\n  listCellWidth?: string;\n  rowHeight?: number;\n  ganttHeight?: number;\n  barCornerRadius?: number;\n  handleWidth?: number;\n  fontFamily?: string;\n  fontSize?: string;\n  /**\n   * How many of row width can be taken by task.\n   * From 0 to 100\n   */\n  barFill?: number;\n  barProgressColor?: string;\n  barProgressSelectedColor?: string;\n  barBackgroundColor?: string;\n  barBackgroundSelectedColor?: string;\n  projectProgressColor?: string;\n  projectProgressSelectedColor?: string;\n  projectBackgroundColor?: string;\n  projectBackgroundSelectedColor?: string;\n  milestoneBackgroundColor?: string;\n  milestoneBackgroundSelectedColor?: string;\n  arrowColor?: string;\n  arrowIndent?: number;\n  todayColor?: string;\n  TooltipContent?: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n  TaskListHeader?: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable?: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    /**\n     * Sets selected task by id\n     */\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n}\n\nexport interface GanttProps extends EventOption, DisplayOption, StylingOption {\n  tasks: Task[];\n}\n", "import { Task, ViewMode } from \"../types/public-types\";\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\nimport DateTimeFormat = Intl.DateTimeFormat;\n\ntype DateHelperScales =\n  | \"year\"\n  | \"month\"\n  | \"day\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"millisecond\";\n\nconst intlDTCache = {};\nexport const getCachedDateTimeFormat = (\n  locString: string | string[],\n  opts: DateTimeFormatOptions = {}\n): DateTimeFormat => {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n};\n\nexport const addToDate = (\n  date: Date,\n  quantity: number,\n  scale: DateHelperScales\n) => {\n  const newDate = new Date(\n    date.getFullYear() + (scale === \"year\" ? quantity : 0),\n    date.getMonth() + (scale === \"month\" ? quantity : 0),\n    date.getDate() + (scale === \"day\" ? quantity : 0),\n    date.getHours() + (scale === \"hour\" ? quantity : 0),\n    date.getMinutes() + (scale === \"minute\" ? quantity : 0),\n    date.getSeconds() + (scale === \"second\" ? quantity : 0),\n    date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0)\n  );\n  return newDate;\n};\n\nexport const startOfDate = (date: Date, scale: DateHelperScales) => {\n  const scores = [\n    \"millisecond\",\n    \"second\",\n    \"minute\",\n    \"hour\",\n    \"day\",\n    \"month\",\n    \"year\",\n  ];\n\n  const shouldReset = (_scale: DateHelperScales) => {\n    const maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n  const newDate = new Date(\n    date.getFullYear(),\n    shouldReset(\"year\") ? 0 : date.getMonth(),\n    shouldReset(\"month\") ? 1 : date.getDate(),\n    shouldReset(\"day\") ? 0 : date.getHours(),\n    shouldReset(\"hour\") ? 0 : date.getMinutes(),\n    shouldReset(\"minute\") ? 0 : date.getSeconds(),\n    shouldReset(\"second\") ? 0 : date.getMilliseconds()\n  );\n  return newDate;\n};\n\nexport const ganttDateRange = (\n  tasks: Task[],\n  viewMode: ViewMode,\n  preStepsCount: number\n) => {\n  let newStartDate: Date = tasks[0].start;\n  let newEndDate: Date = tasks[0].start;\n  for (const task of tasks) {\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n  switch (viewMode) {\n    case ViewMode.Year:\n      newStartDate = addToDate(newStartDate, -1, \"year\");\n      newStartDate = startOfDate(newStartDate, \"year\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(\n        getMonday(newStartDate),\n        -7 * preStepsCount,\n        \"day\"\n      );\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\"); // 24(1 day)*3 - 6\n      break;\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\"); // 24(1 day)*5 - 12\n      break;\n    case ViewMode.Hour:\n      newStartDate = startOfDate(newStartDate, \"hour\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"hour\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 1, \"day\");\n      break;\n  }\n  return [newStartDate, newEndDate];\n};\n\nexport const seedDates = (\n  startDate: Date,\n  endDate: Date,\n  viewMode: ViewMode\n) => {\n  let currentDate: Date = new Date(startDate);\n  const dates: Date[] = [currentDate];\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Year:\n        currentDate = addToDate(currentDate, 1, \"year\");\n        break;\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n      case ViewMode.Hour:\n        currentDate = addToDate(currentDate, 1, \"hour\");\n        break;\n    }\n    dates.push(currentDate);\n  }\n  return dates;\n};\n\nexport const getLocaleMonth = (date: Date, locale: string) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\",\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\nexport const getLocalDayOfWeek = (\n  date: Date,\n  locale: string,\n  format?: \"long\" | \"short\" | \"narrow\" | undefined\n) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    weekday: format,\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\n/**\n * Returns monday of current week\n * @param date date for modify\n */\nconst getMonday = (date: Date) => {\n  const day = date.getDay();\n  const diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(date.setDate(diff));\n};\n\nexport const getWeekNumberISO8601 = (date: Date) => {\n  const tmpDate = new Date(date.valueOf());\n  const dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  const firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + ((4 - tmpDate.getDay() + 7) % 7));\n  }\n  const weekNumber = (\n    1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)\n  ).toString();\n\n  if (weekNumber.length === 1) {\n    return `0${weekNumber}`;\n  } else {\n    return weekNumber;\n  }\n};\n\nexport const getDaysInMonth = (month: number, year: number) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n", "import React from \"react\";\nimport styles from \"./task-list-header.module.css\";\n\nexport const TaskListHeaderDefault: React.FC<{\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n}> = ({ headerHeight, fontFamily, fontSize, rowWidth }) => {\n  return (\n    <div\n      className={styles.ganttTable}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      <div\n        className={styles.ganttTable_Header}\n        style={{\n          height: headerHeight - 2,\n        }}\n      >\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;Name\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.2,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;From\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.25,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;To\n        </div>\n      </div>\n    </div>\n  );\n};\n", "import React, { useMemo } from \"react\";\nimport styles from \"./task-list-table.module.css\";\nimport { Task } from \"../../types/public-types\";\n\nconst localeDateStringCache = {};\nconst toLocaleDateStringFactory =\n  (locale: string) =>\n  (date: Date, dateTimeOptions: Intl.DateTimeFormatOptions) => {\n    const key = date.toString();\n    let lds = localeDateStringCache[key];\n    if (!lds) {\n      lds = date.toLocaleDateString(locale, dateTimeOptions);\n      localeDateStringCache[key] = lds;\n    }\n    return lds;\n  };\nconst dateTimeOptions: Intl.DateTimeFormatOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n};\n\nexport const TaskListTableDefault: React.FC<{\n  rowHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  locale: string;\n  tasks: Task[];\n  selectedTaskId: string;\n  setSelectedTask: (taskId: string) => void;\n  onExpanderClick: (task: Task) => void;\n}> = ({\n  rowHeight,\n  rowWidth,\n  tasks,\n  fontFamily,\n  fontSize,\n  locale,\n  onExpanderClick,\n}) => {\n  const toLocaleDateString = useMemo(\n    () => toLocaleDateStringFactory(locale),\n    [locale]\n  );\n\n  return (\n    <div\n      className={styles.taskListWrapper}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      {tasks.map(t => {\n        let expanderSymbol = \"\";\n        if (t.hideChildren === false) {\n          expanderSymbol = \"▼\";\n        } else if (t.hideChildren === true) {\n          expanderSymbol = \"▶\";\n        }\n\n        return (\n          <div\n            className={styles.taskListTableRow}\n            style={{ height: rowHeight }}\n            key={`${t.id}row`}\n          >\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n              title={t.name}\n            >\n              <div className={styles.taskListNameWrapper}>\n                <div\n                  className={\n                    expanderSymbol\n                      ? styles.taskListExpander\n                      : styles.taskListEmptyExpander\n                  }\n                  onClick={() => onExpanderClick(t)}\n                >\n                  {expanderSymbol}\n                </div>\n                <div>{t.name}</div>\n              </div>\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.start, dateTimeOptions)}\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.end, dateTimeOptions)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n", "import React, { useRef, useEffect, useState } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport styles from \"./tooltip.module.css\";\n\nexport type TooltipProps = {\n  task: BarTask;\n  arrowIndent: number;\n  rtl: boolean;\n  svgContainerHeight: number;\n  svgContainerWidth: number;\n  svgWidth: number;\n  headerHeight: number;\n  taskListWidth: number;\n  scrollX: number;\n  scrollY: number;\n  rowHeight: number;\n  fontSize: string;\n  fontFamily: string;\n  TooltipContent: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n};\nexport const Tooltip: React.FC<TooltipProps> = ({\n  task,\n  rowHeight,\n  rtl,\n  svgContainerHeight,\n  svgContainerWidth,\n  scrollX,\n  scrollY,\n  arrowIndent,\n  fontSize,\n  fontFamily,\n  headerHeight,\n  taskListWidth,\n  TooltipContent,\n}) => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n  const [relatedY, setRelatedY] = useState(0);\n  const [relatedX, setRelatedX] = useState(0);\n  useEffect(() => {\n    if (tooltipRef.current) {\n      const tooltipHeight = tooltipRef.current.offsetHeight * 1.1;\n      const tooltipWidth = tooltipRef.current.offsetWidth * 1.1;\n\n      let newRelatedY = task.index * rowHeight - scrollY + headerHeight;\n      let newRelatedX: number;\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX;\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX;\n        }\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX;\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        const fullChartWidth = taskListWidth + svgContainerWidth;\n        if (tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX =\n            task.x1 +\n            taskListWidth -\n            arrowIndent * 1.5 -\n            scrollX -\n            tooltipWidth;\n        }\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      }\n\n      const tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY;\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight;\n      }\n      setRelatedY(newRelatedY);\n      setRelatedX(newRelatedX);\n    }\n  }, [\n    tooltipRef,\n    task,\n    arrowIndent,\n    scrollX,\n    scrollY,\n    headerHeight,\n    taskListWidth,\n    rowHeight,\n    svgContainerHeight,\n    svgContainerWidth,\n    rtl,\n  ]);\n\n  return (\n    <div\n      ref={tooltipRef}\n      className={\n        relatedX\n          ? styles.tooltipDetailsContainer\n          : styles.tooltipDetailsContainerHidden\n      }\n      style={{ left: relatedX, top: relatedY }}\n    >\n      <TooltipContent task={task} fontSize={fontSize} fontFamily={fontFamily} />\n    </div>\n  );\n};\n\nexport const StandardTooltipContent: React.FC<{\n  task: Task;\n  fontSize: string;\n  fontFamily: string;\n}> = ({ task, fontSize, fontFamily }) => {\n  const style = {\n    fontSize,\n    fontFamily,\n  };\n  return (\n    <div className={styles.tooltipDefaultContainer} style={style}>\n      <b style={{ fontSize: fontSize + 6 }}>{`${\n        task.name\n      }: ${task.start.getDate()}-${\n        task.start.getMonth() + 1\n      }-${task.start.getFullYear()} - ${task.end.getDate()}-${\n        task.end.getMonth() + 1\n      }-${task.end.getFullYear()}`}</b>\n      {task.end.getTime() - task.start.getTime() !== 0 && (\n        <p className={styles.tooltipDefaultContainerParagraph}>{`Duration: ${~~(\n          (task.end.getTime() - task.start.getTime()) /\n          (1000 * 60 * 60 * 24)\n        )} day(s)`}</p>\n      )}\n\n      <p className={styles.tooltipDefaultContainerParagraph}>\n        {!!task.progress && `Progress: ${task.progress} %`}\n      </p>\n    </div>\n  );\n};\n", "import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./vertical-scroll.module.css\";\n\nexport const VerticalScroll: React.FC<{\n  scroll: number;\n  ganttHeight: number;\n  ganttFullHeight: number;\n  headerHeight: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({\n  scroll,\n  ganttHeight,\n  ganttFullHeight,\n  headerHeight,\n  rtl,\n  onScroll,\n}) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      style={{\n        height: ganttHeight,\n        marginTop: headerHeight,\n        marginLeft: rtl ? \"\" : \"-1rem\",\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ height: ganttFullHeight, width: 1 }} />\n    </div>\n  );\n};\n", "import React, { useEffect, useRef } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Task } from \"../../types/public-types\";\n\nexport type TaskListProps = {\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  rowHeight: number;\n  ganttHeight: number;\n  scrollY: number;\n  locale: string;\n  tasks: Task[];\n  taskListRef: React.RefObject<HTMLDivElement>;\n  horizontalContainerClass?: string;\n  selectedTask: BarTask | undefined;\n  setSelectedTask: (task: string) => void;\n  onExpanderClick: (task: Task) => void;\n  TaskListHeader: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n};\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  headerHeight,\n  fontFamily,\n  fontSize,\n  rowWidth,\n  rowHeight,\n  scrollY,\n  tasks,\n  selectedTask,\n  setSelectedTask,\n  onExpanderClick,\n  locale,\n  ganttHeight,\n  taskListRef,\n  horizontalContainerClass,\n  TaskListHeader,\n  TaskListTable,\n}) => {\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  const headerProps = {\n    headerHeight,\n    fontFamily,\n    fontSize,\n    rowWidth,\n  };\n  const selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  const tableProps = {\n    rowHeight,\n    rowWidth,\n    fontFamily,\n    fontSize,\n    tasks,\n    locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask,\n    onExpanderClick,\n  };\n\n  return (\n    <div ref={taskListRef}>\n      <TaskListHeader {...headerProps} />\n      <div\n        ref={horizontalContainerRef}\n        className={horizontalContainerClass}\n        style={ganttHeight ? { height: ganttHeight } : {}}\n      >\n        <TaskListTable {...tableProps} />\n      </div>\n    </div>\n  );\n};\n", "import React, { ReactChild } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { addToDate } from \"../../helpers/date-helper\";\nimport styles from \"./grid.module.css\";\n\nexport type GridBodyProps = {\n  tasks: Task[];\n  dates: Date[];\n  svgWidth: number;\n  rowHeight: number;\n  columnWidth: number;\n  todayColor: string;\n  rtl: boolean;\n};\nexport const GridBody: React.FC<GridBodyProps> = ({\n  tasks,\n  dates,\n  rowHeight,\n  svgWidth,\n  columnWidth,\n  todayColor,\n  rtl,\n}) => {\n  let y = 0;\n  const gridRows: ReactChild[] = [];\n  const rowLines: ReactChild[] = [\n    <line\n      key=\"RowLineFirst\"\n      x=\"0\"\n      y1={0}\n      x2={svgWidth}\n      y2={0}\n      className={styles.gridRowLine}\n    />,\n  ];\n  for (const task of tasks) {\n    gridRows.push(\n      <rect\n        key={\"Row\" + task.id}\n        x=\"0\"\n        y={y}\n        width={svgWidth}\n        height={rowHeight}\n        className={styles.gridRow}\n      />\n    );\n    rowLines.push(\n      <line\n        key={\"RowLine\" + task.id}\n        x=\"0\"\n        y1={y + rowHeight}\n        x2={svgWidth}\n        y2={y + rowHeight}\n        className={styles.gridRowLine}\n      />\n    );\n    y += rowHeight;\n  }\n\n  const now = new Date();\n  let tickX = 0;\n  const ticks: ReactChild[] = [];\n  let today: ReactChild = <rect />;\n  for (let i = 0; i < dates.length; i++) {\n    const date = dates[i];\n    ticks.push(\n      <line\n        key={date.getTime()}\n        x1={tickX}\n        y1={0}\n        x2={tickX}\n        y2={y}\n        className={styles.gridTick}\n      />\n    );\n    if (\n      (i + 1 !== dates.length &&\n        date.getTime() < now.getTime() &&\n        dates[i + 1].getTime() >= now.getTime()) ||\n      // if current date is last\n      (i !== 0 &&\n        i + 1 === dates.length &&\n        date.getTime() < now.getTime() &&\n        addToDate(\n          date,\n          date.getTime() - dates[i - 1].getTime(),\n          \"millisecond\"\n        ).getTime() >= now.getTime())\n    ) {\n      today = (\n        <rect\n          x={tickX}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    // rtl for today\n    if (\n      rtl &&\n      i + 1 !== dates.length &&\n      date.getTime() >= now.getTime() &&\n      dates[i + 1].getTime() < now.getTime()\n    ) {\n      today = (\n        <rect\n          x={tickX + columnWidth}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    tickX += columnWidth;\n  }\n  return (\n    <g className=\"gridBody\">\n      <g className=\"rows\">{gridRows}</g>\n      <g className=\"rowLines\">{rowLines}</g>\n      <g className=\"ticks\">{ticks}</g>\n      <g className=\"today\">{today}</g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { GridBody, GridBodyProps } from \"./grid-body\";\n\nexport type GridProps = GridBodyProps;\nexport const Grid: React.FC<GridProps> = props => {\n  return (\n    <g className=\"grid\">\n      <GridBody {...props} />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport styles from \"./calendar.module.css\";\n\ntype TopPartOfCalendarProps = {\n  value: string;\n  x1Line: number;\n  y1Line: number;\n  y2Line: number;\n  xText: number;\n  yText: number;\n};\n\nexport const TopPartOfCalendar: React.FC<TopPartOfCalendarProps> = ({\n  value,\n  x1Line,\n  y1Line,\n  y2Line,\n  xText,\n  yText,\n}) => {\n  return (\n    <g className=\"calendarTop\">\n      <line\n        x1={x1Line}\n        y1={y1Line}\n        x2={x1Line}\n        y2={y2Line}\n        className={styles.calendarTopTick}\n        key={value + \"line\"}\n      />\n      <text\n        key={value + \"text\"}\n        y={yText}\n        x={xText}\n        className={styles.calendarTopText}\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n", "import React, { ReactChild } from \"react\";\nimport { ViewMode } from \"../../types/public-types\";\nimport { TopPartOfCalendar } from \"./top-part-of-calendar\";\nimport {\n  getCachedDateTimeFormat,\n  getDaysInMonth,\n  getLocalDayOfWeek,\n  getLocaleMonth,\n  getWeekNumberISO8601,\n} from \"../../helpers/date-helper\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./calendar.module.css\";\n\nexport type CalendarProps = {\n  dateSetup: DateSetup;\n  locale: string;\n  viewMode: ViewMode;\n  rtl: boolean;\n  headerHeight: number;\n  columnWidth: number;\n  fontFamily: string;\n  fontSize: string;\n};\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  dateSetup,\n  locale,\n  viewMode,\n  rtl,\n  headerHeight,\n  columnWidth,\n  fontFamily,\n  fontSize,\n}) => {\n  const getCalendarValuesForYear = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = date.getFullYear();\n      bottomValues.push(\n        <text\n          key={date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getFullYear() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getFullYear()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={headerHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForMonth = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = getLocaleMonth(date, locale);\n      bottomValues.push(\n        <text\n          key={bottomValue + date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForWeek = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    let weeksCount: number = 1;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = dates.length - 1; i >= 0; i--) {\n      const date = dates[i];\n      let topValue = \"\";\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        // top\n        topValue = `${getLocaleMonth(date, locale)}, ${date.getFullYear()}`;\n      }\n      // bottom\n      const bottomValue = `W${getWeekNumberISO8601(date)}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n\n      if (topValue) {\n        // if last day is new month\n        if (i !== dates.length - 1) {\n          topValues.push(\n            <TopPartOfCalendar\n              key={topValue}\n              value={topValue}\n              x1Line={columnWidth * i + weeksCount * columnWidth}\n              y1Line={0}\n              y2Line={topDefaultHeight}\n              xText={columnWidth * i + columnWidth * weeksCount * 0.5}\n              yText={topDefaultHeight * 0.9}\n            />\n          );\n        }\n        weeksCount = 0;\n      }\n      weeksCount++;\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = `${getLocalDayOfWeek(date, locale, \"short\")}, ${date\n        .getDate()\n        .toString()}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i + 1 !== dates.length &&\n        date.getMonth() !== dates[i + 1].getMonth()\n      ) {\n        const topValue = getLocaleMonth(date, locale);\n\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * (i + 1)}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={\n              columnWidth * (i + 1) -\n              getDaysInMonth(date.getMonth(), date.getFullYear()) *\n                columnWidth *\n                0.5\n            }\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForPartOfDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const ticks = viewMode === ViewMode.HalfDay ? 2 : 4;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        const topValue = `${getLocalDayOfWeek(\n          date,\n          locale,\n          \"short\"\n        )}, ${date.getDate()} ${getLocaleMonth(date, locale)}`;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i + ticks * columnWidth}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * i + ticks * columnWidth * 0.5}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForHour = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i !== 0 && date.getDate() !== dates[i - 1].getDate()) {\n        const displayDate = dates[i - 1];\n        const topValue = `${getLocalDayOfWeek(\n          displayDate,\n          locale,\n          \"long\"\n        )}, ${displayDate.getDate()} ${getLocaleMonth(displayDate, locale)}`;\n        const topPosition = (date.getHours() - 24) / 2;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + displayDate.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * (i + topPosition)}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  let topValues: ReactChild[] = [];\n  let bottomValues: ReactChild[] = [];\n  switch (dateSetup.viewMode) {\n    case ViewMode.Year:\n      [topValues, bottomValues] = getCalendarValuesForYear();\n      break;\n    case ViewMode.Month:\n        [topValues, bottomValues] = getCalendarValuesForMonth();\n        break;\n      case ViewMode.Week:\n      [topValues, bottomValues] = getCalendarValuesForWeek();\n      break;\n    case ViewMode.Day:\n      [topValues, bottomValues] = getCalendarValuesForDay();\n      break;\n    case ViewMode.QuarterDay:\n    case ViewMode.HalfDay:\n      [topValues, bottomValues] = getCalendarValuesForPartOfDay();\n      break;\n    case ViewMode.Hour:\n      [topValues, bottomValues] = getCalendarValuesForHour();\n  }\n  return (\n    <g className=\"calendar\" fontSize={fontSize} fontFamily={fontFamily}>\n      <rect\n        x={0}\n        y={0}\n        width={columnWidth * dateSetup.dates.length}\n        height={headerHeight}\n        className={styles.calendarHeader}\n      />\n      {bottomValues} {topValues}\n    </g>\n  );\n};\n", "// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n", "import React from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\n\ntype ArrowProps = {\n  taskFrom: BarTask;\n  taskTo: BarTask;\n  rowHeight: number;\n  taskHeight: number;\n  arrowIndent: number;\n  rtl: boolean;\n};\nexport const Arrow: React.FC<ArrowProps> = ({\n  taskFrom,\n  taskTo,\n  rowHeight,\n  taskHeight,\n  arrowIndent,\n  rtl,\n}) => {\n  let path: string;\n  let trianglePoints: string;\n  if (rtl) {\n    [path, trianglePoints] = drownPathAndTriangleRTL(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  } else {\n    [path, trianglePoints] = drownPathAndTriangle(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  }\n\n  return (\n    <g className=\"arrow\">\n      <path strokeWidth=\"1.5\" d={path} fill=\"none\" />\n      <polygon points={trianglePoints} />\n    </g>\n  );\n};\n\nconst drownPathAndTriangle = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x1 ? \"\" : `H ${taskTo.x1 - arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x1\n      ? arrowIndent\n      : taskTo.x1 - taskFrom.x2 - arrowIndent;\n\n  const path = `M ${taskFrom.x2} ${taskFrom.y + taskHeight / 2} \n  h ${arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x1},${taskToEndPosition} \n  ${taskTo.x1 - 5},${taskToEndPosition - 5} \n  ${taskTo.x1 - 5},${taskToEndPosition + 5}`;\n  return [path, trianglePoints];\n};\n\nconst drownPathAndTriangleRTL = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x2 ? \"\" : `H ${taskTo.x2 + arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x2\n      ? -arrowIndent\n      : taskTo.x2 - taskFrom.x1 + arrowIndent;\n\n  const path = `M ${taskFrom.x1} ${taskFrom.y + taskHeight / 2} \n  h ${-arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x2},${taskToEndPosition} \n  ${taskTo.x2 + 5},${taskToEndPosition + 5} \n  ${taskTo.x2 + 5},${taskToEndPosition - 5}`;\n  return [path, trianglePoints];\n};\n", "import { Task } from \"../types/public-types\";\nimport { BarTask, TaskTypeInternal } from \"../types/bar-task\";\nimport { BarMoveAction } from \"../types/gantt-task-actions\";\n\nexport const convertToBarTasks = (\n  tasks: Task[],\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n) => {\n  let barTasks = tasks.map((t, i) => {\n    return convertToBarTask(\n      t,\n      i,\n      dates,\n      columnWidth,\n      rowHeight,\n      taskHeight,\n      barCornerRadius,\n      handleWidth,\n      rtl,\n      barProgressColor,\n      barProgressSelectedColor,\n      barBackgroundColor,\n      barBackgroundSelectedColor,\n      projectProgressColor,\n      projectProgressSelectedColor,\n      projectBackgroundColor,\n      projectBackgroundSelectedColor,\n      milestoneBackgroundColor,\n      milestoneBackgroundSelectedColor\n    );\n  });\n\n  // set dependencies\n  barTasks = barTasks.map(task => {\n    const dependencies = task.dependencies || [];\n    for (let j = 0; j < dependencies.length; j++) {\n      const dependence = barTasks.findIndex(\n        value => value.id === dependencies[j]\n      );\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    }\n    return task;\n  });\n\n  return barTasks;\n};\n\nconst convertToBarTask = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  let barTask: BarTask;\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      );\n      break;\n    case \"project\":\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor\n      );\n      break;\n    default:\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor\n      );\n      break;\n  }\n  return barTask;\n};\n\nconst convertToBar = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string\n): BarTask => {\n  let x1: number;\n  let x2: number;\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, columnWidth);\n  }\n  let typeInternal: TaskTypeInternal = task.type;\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  const [progressWidth, progressX] = progressWithByParams(\n    x1,\n    x2,\n    task.progress,\n    rtl\n  );\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n  const hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  const styles = {\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor,\n    ...task.styles,\n  };\n  return {\n    ...task,\n    typeInternal,\n    x1,\n    x2,\n    y,\n    index,\n    progressX,\n    progressWidth,\n    barCornerRadius,\n    handleWidth,\n    hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst convertToMilestone = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  const x = taskXCoordinate(task.start, dates, columnWidth);\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n\n  const x1 = x - taskHeight * 0.5;\n  const x2 = x + taskHeight * 0.5;\n\n  const rotatedHeight = taskHeight / 1.414;\n  const styles = {\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\",\n    ...task.styles,\n  };\n  return {\n    ...task,\n    end: task.start,\n    x1,\n    x2,\n    y,\n    index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius,\n    handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst taskXCoordinate = (xDate: Date, dates: Date[], columnWidth: number) => {\n  const index = dates.findIndex(d => d.getTime() >= xDate.getTime()) - 1;\n\n  const remainderMillis = xDate.getTime() - dates[index].getTime();\n  const percentOfInterval =\n    remainderMillis / (dates[index + 1].getTime() - dates[index].getTime());\n  const x = index * columnWidth + percentOfInterval * columnWidth;\n  return x;\n};\nconst taskXCoordinateRTL = (\n  xDate: Date,\n  dates: Date[],\n  columnWidth: number\n) => {\n  let x = taskXCoordinate(xDate, dates, columnWidth);\n  x += columnWidth;\n  return x;\n};\nconst taskYCoordinate = (\n  index: number,\n  rowHeight: number,\n  taskHeight: number\n) => {\n  const y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nexport const progressWithByParams = (\n  taskX1: number,\n  taskX2: number,\n  progress: number,\n  rtl: boolean\n) => {\n  const progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  let progressX: number;\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n  return [progressWidth, progressX];\n};\n\nexport const progressByProgressWidth = (\n  progressWidth: number,\n  barTask: BarTask\n) => {\n  const barWidth = barTask.x2 - barTask.x1;\n  const progressPercent = Math.round((progressWidth * 100) / barWidth);\n  if (progressPercent >= 100) return 100;\n  else if (progressPercent <= 0) return 0;\n  else return progressPercent;\n};\n\nconst progressByX = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 100;\n  else if (x <= task.x1) return 0;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((x - task.x1) * 100) / barWidth);\n    return progressPercent;\n  }\n};\nconst progressByXRTL = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 0;\n  else if (x <= task.x1) return 100;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((task.x2 - x) * 100) / barWidth);\n    return progressPercent;\n  }\n};\n\nexport const getProgressPoint = (\n  progressX: number,\n  taskY: number,\n  taskHeight: number\n) => {\n  const point = [\n    progressX - 5,\n    taskY + taskHeight,\n    progressX + 5,\n    taskY + taskHeight,\n    progressX,\n    taskY + taskHeight - 8.66,\n  ];\n  return point.join(\",\");\n};\n\nconst startByX = (x: number, xStep: number, task: BarTask) => {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nconst endByX = (x: number, xStep: number, task: BarTask) => {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x2) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nconst moveByX = (x: number, xStep: number, task: BarTask) => {\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX1 = task.x1 + additionalXValue;\n  const newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nconst dateByX = (\n  x: number,\n  taskX: number,\n  taskDate: Date,\n  xStep: number,\n  timeStep: number\n) => {\n  let newDate = new Date(((x - taskX) / xStep) * timeStep + taskDate.getTime());\n  newDate = new Date(\n    newDate.getTime() +\n      (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000\n  );\n  return newDate;\n};\n\n/**\n * Method handles event in real time(mousemove) and on finish(mouseup)\n */\nexport const handleTaskBySVGMouseEvent = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  let result: { isChanged: boolean; changedTask: BarTask };\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta\n      );\n      break;\n    default:\n      result = handleTaskBySVGMouseEventForBar(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      break;\n  }\n  return result;\n};\n\nconst handleTaskBySVGMouseEventForBar = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n      isChanged = changedTask.progress !== selectedTask.progress;\n      if (isChanged) {\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    case \"start\": {\n      const newX1 = startByX(svgX, xStep, selectedTask);\n      changedTask.x1 = newX1;\n      isChanged = changedTask.x1 !== selectedTask.x1;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.end = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.start = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"end\": {\n      const newX2 = endByX(svgX, xStep, selectedTask);\n      changedTask.x2 = newX2;\n      isChanged = changedTask.x2 !== selectedTask.x2;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.start = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.end = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = dateByX(\n          newMoveX2,\n          selectedTask.x2,\n          selectedTask.end,\n          xStep,\n          timeStep\n        );\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n\nconst handleTaskBySVGMouseEventForMilestone = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = changedTask.start;\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n", "import { BarTask } from \"../types/bar-task\";\nimport { Task } from \"../types/public-types\";\n\nexport function isKeyboardEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.KeyboardEvent {\n  return (event as React.KeyboardEvent).key !== undefined;\n}\n\nexport function isMouseEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.MouseEvent {\n  return (event as React.MouseEvent).clientX !== undefined;\n}\n\nexport function isBarTask(task: Task | BarTask): task is BarTask {\n  return (task as BarTask).x1 !== undefined;\n}\n\nexport function removeHiddenTasks(tasks: Task[]) {\n  const groupedTasks = tasks.filter(\n    t => t.hideChildren && t.type === \"project\"\n  );\n  if (groupedTasks.length > 0) {\n    for (let i = 0; groupedTasks.length > i; i++) {\n      const groupedTask = groupedTasks[i];\n      const children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(t => children.indexOf(t) === -1);\n    }\n  }\n  return tasks;\n}\n\nfunction getChildren(taskList: Task[], task: Task) {\n  let tasks: Task[] = [];\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(\n      t => t.dependencies && t.dependencies.indexOf(task.id) !== -1\n    );\n  } else {\n    tasks = taskList.filter(t => t.project && t.project === task.id);\n  }\n  var taskChildren: Task[] = [];\n  tasks.forEach(t => {\n    taskChildren.push(...getChildren(taskList, t));\n  })\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n\nexport const sortTasks = (taskA: Task, taskB: Task) => {\n  const orderA = taskA.displayOrder || Number.MAX_VALUE;\n  const orderB = taskB.displayOrder || Number.MAX_VALUE;\n  if (orderA > orderB) {\n    return 1;\n  } else if (orderA < orderB) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n", "import React from \"react\";\nimport style from \"./bar.module.css\";\n\ntype BarDisplayProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  /* progress start point */\n  progressX: number;\n  progressWidth: number;\n  barCornerRadius: number;\n  styles: {\n    backgroundColor: string;\n    backgroundSelectedColor: string;\n    progressColor: string;\n    progressSelectedColor: string;\n  };\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarDisplay: React.FC<BarDisplayProps> = ({\n  x,\n  y,\n  width,\n  height,\n  isSelected,\n  progressX,\n  progressWidth,\n  barCornerRadius,\n  styles,\n  onMouseDown,\n}) => {\n  const getProcessColor = () => {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  const getBarColor = () => {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return (\n    <g onMouseDown={onMouseDown}>\n      <rect\n        x={x}\n        width={width}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getBarColor()}\n        className={style.barBackground}\n      />\n      <rect\n        x={progressX}\n        width={progressWidth}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getProcessColor()}\n      />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarDateHandleProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  barCornerRadius: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n};\nexport const BarDateHandle: React.FC<BarDateHandleProps> = ({\n  x,\n  y,\n  width,\n  height,\n  barCornerRadius,\n  onMouseDown,\n}) => {\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      className={styles.barHandle}\n      ry={barCornerRadius}\n      rx={barCornerRadius}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n", "import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarProgressHandleProps = {\n  progressPoint: string;\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarProgressHandle: React.FC<BarProgressHandleProps> = ({\n  progressPoint,\n  onMouseDown,\n}) => {\n  return (\n    <polygon\n      className={styles.barHandle}\n      points={progressPoint}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n", "import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarDateHandle } from \"./bar-date-handle\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const Bar: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  rtl,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    +!rtl * task.progressWidth + task.progressX,\n    task.y,\n    task.height\n  );\n  const handleHeight = task.height - 2;\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isDateChangeable && (\n          <g>\n            {/* left */}\n            <BarDateHandle\n              x={task.x1 + 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"start\", task, e);\n              }}\n            />\n            {/* right */}\n            <BarDateHandle\n              x={task.x2 - task.handleWidth - 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"end\", task, e);\n              }}\n            />\n          </g>\n        )}\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const BarSmall: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    task.progressWidth + task.x1,\n    task.y,\n    task.height\n  );\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./milestone.module.css\";\n\nexport const Milestone: React.FC<TaskItemProps> = ({\n  task,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const transform = `rotate(45 ${task.x1 + task.height * 0.356} \n    ${task.y + task.height * 0.85})`;\n  const getBarColor = () => {\n    return isSelected\n      ? task.styles.backgroundSelectedColor\n      : task.styles.backgroundColor;\n  };\n\n  return (\n    <g tabIndex={0} className={styles.milestoneWrapper}>\n      <rect\n        fill={getBarColor()}\n        x={task.x1}\n        width={task.height}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        transform={transform}\n        className={styles.milestoneBackground}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n    </g>\n  );\n};\n", "import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./project.module.css\";\n\nexport const Project: React.FC<TaskItemProps> = ({ task, isSelected }) => {\n  const barColor = isSelected\n    ? task.styles.backgroundSelectedColor\n    : task.styles.backgroundColor;\n  const processColor = isSelected\n    ? task.styles.progressSelectedColor\n    : task.styles.progressColor;\n  const projectWith = task.x2 - task.x1;\n\n  const projectLeftTriangle = [\n    task.x1,\n    task.y + task.height / 2 - 1,\n    task.x1,\n    task.y + task.height,\n    task.x1 + 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n  const projectRightTriangle = [\n    task.x2,\n    task.y + task.height / 2 - 1,\n    task.x2,\n    task.y + task.height,\n    task.x2 - 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n\n  return (\n    <g tabIndex={0} className={styles.projectWrapper}>\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectBackground}\n      />\n      <rect\n        x={task.progressX}\n        width={task.progressWidth}\n        y={task.y}\n        height={task.height}\n        ry={task.barCornerRadius}\n        rx={task.barCornerRadius}\n        fill={processColor}\n      />\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height / 2}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectTop}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectLeftTriangle}\n        fill={barColor}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectRightTriangle}\n        fill={barColor}\n      />\n    </g>\n  );\n};\n", "import React, { useEffect, useRef, useState } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { GanttContentMoveAction } from \"../../types/gantt-task-actions\";\nimport { Bar } from \"./bar/bar\";\nimport { BarSmall } from \"./bar/bar-small\";\nimport { Milestone } from \"./milestone/milestone\";\nimport { Project } from \"./project/project\";\nimport style from \"./task-list.module.css\";\n\nexport type TaskItemProps = {\n  task: BarTask;\n  arrowIndent: number;\n  taskHeight: number;\n  isProgressChangeable: boolean;\n  isDateChangeable: boolean;\n  isDelete: boolean;\n  isSelected: boolean;\n  rtl: boolean;\n  onEventStart: (\n    action: GanttContentMoveAction,\n    selectedTask: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => any;\n};\n\nexport const TaskItem: React.FC<TaskItemProps> = props => {\n  const {\n    task,\n    arrowIndent,\n    isDelete,\n    taskHeight,\n    isSelected,\n    rtl,\n    onEventStart,\n  } = {\n    ...props,\n  };\n  const textRef = useRef<SVGTextElement>(null);\n  const [taskItem, setTaskItem] = useState<JSX.Element>(<div />);\n  const [isTextInside, setIsTextInside] = useState(true);\n\n  useEffect(() => {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(<Milestone {...props} />);\n        break;\n      case \"project\":\n        setTaskItem(<Project {...props} />);\n        break;\n      case \"smalltask\":\n        setTaskItem(<BarSmall {...props} />);\n        break;\n      default:\n        setTaskItem(<Bar {...props} />);\n        break;\n    }\n  }, [task, isSelected]);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  const getX = () => {\n    const width = task.x2 - task.x1;\n    const hasChild = task.barChildren.length > 0;\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n    if (rtl && textRef.current) {\n      return (\n        task.x1 -\n        textRef.current.getBBox().width -\n        arrowIndent * +hasChild -\n        arrowIndent * 0.2\n      );\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return (\n    <g\n      onKeyDown={e => {\n        switch (e.key) {\n          case \"Delete\": {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n        }\n        e.stopPropagation();\n      }}\n      onMouseEnter={e => {\n        onEventStart(\"mouseenter\", task, e);\n      }}\n      onMouseLeave={e => {\n        onEventStart(\"mouseleave\", task, e);\n      }}\n      onDoubleClick={e => {\n        onEventStart(\"dblclick\", task, e);\n      }}\n      onClick={e => {\n        onEventStart(\"click\", task, e);\n      }}\n      onFocus={() => {\n        onEventStart(\"select\", task);\n      }}\n    >\n      {taskItem}\n      <text\n        x={getX()}\n        y={task.y + taskHeight * 0.5}\n        className={\n          isTextInside\n            ? style.barLabel\n            : style.barLabel && style.barLabelOutside\n        }\n        ref={textRef}\n      >\n        {task.name}\n      </text>\n    </g>\n  );\n};\n", "import React, { useEffect, useState } from \"react\";\nimport { EventOption } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Arrow } from \"../other/arrow\";\nimport { handleTaskBySVGMouseEvent } from \"../../helpers/bar-helper\";\nimport { isKeyboardEvent } from \"../../helpers/other-helper\";\nimport { TaskItem } from \"../task-item/task-item\";\nimport {\n  BarMoveAction,\n  GanttContentMoveAction,\n  GanttEvent,\n} from \"../../types/gantt-task-actions\";\n\nexport type TaskGanttContentProps = {\n  tasks: BarTask[];\n  dates: Date[];\n  ganttEvent: GanttEvent;\n  selectedTask: BarTask | undefined;\n  rowHeight: number;\n  columnWidth: number;\n  timeStep: number;\n  svg?: React.RefObject<SVGSVGElement>;\n  svgWidth: number;\n  taskHeight: number;\n  arrowColor: string;\n  arrowIndent: number;\n  fontSize: string;\n  fontFamily: string;\n  rtl: boolean;\n  setGanttEvent: (value: GanttEvent) => void;\n  setFailedTask: (value: BarTask | null) => void;\n  setSelectedTask: (taskId: string) => void;\n} & EventOption;\n\nexport const TaskGanttContent: React.FC<TaskGanttContentProps> = ({\n  tasks,\n  dates,\n  ganttEvent,\n  selectedTask,\n  rowHeight,\n  columnWidth,\n  timeStep,\n  svg,\n  taskHeight,\n  arrowColor,\n  arrowIndent,\n  fontFamily,\n  fontSize,\n  rtl,\n  setGanttEvent,\n  setFailedTask,\n  setSelectedTask,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onClick,\n  onDelete,\n}) => {\n  const point = svg?.current?.createSVGPoint();\n  const [xStep, setXStep] = useState(0);\n  const [initEventX1Delta, setInitEventX1Delta] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n\n  // create xStep\n  useEffect(() => {\n    const dateDelta =\n      dates[1].getTime() -\n      dates[0].getTime() -\n      dates[1].getTimezoneOffset() * 60 * 1000 +\n      dates[0].getTimezoneOffset() * 60 * 1000;\n    const newXStep = (timeStep * columnWidth) / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n\n  useEffect(() => {\n    const handleMouseMove = async (event: MouseEvent) => {\n      if (!ganttEvent.changedTask || !point || !svg?.current) return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n\n      const { isChanged, changedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        ganttEvent.action as BarMoveAction,\n        ganttEvent.changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      if (isChanged) {\n        setGanttEvent({ action: ganttEvent.action, changedTask });\n      }\n    };\n\n    const handleMouseUp = async (event: MouseEvent) => {\n      const { action, originalSelectedTask, changedTask } = ganttEvent;\n      if (!changedTask || !point || !svg?.current || !originalSelectedTask)\n        return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n      const { changedTask: newChangedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        action as BarMoveAction,\n        changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n\n      const isNotLikeOriginal =\n        originalSelectedTask.start !== newChangedTask.start ||\n        originalSelectedTask.end !== newChangedTask.end ||\n        originalSelectedTask.progress !== newChangedTask.progress;\n\n      // remove listeners\n      svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n      svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n      setGanttEvent({ action: \"\" });\n      setIsMoving(false);\n\n      // custom operation start\n      let operationSuccess = true;\n      if (\n        (action === \"move\" || action === \"end\" || action === \"start\") &&\n        onDateChange &&\n        isNotLikeOriginal\n      ) {\n        try {\n          const result = await onDateChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      } else if (onProgressChange && isNotLikeOriginal) {\n        try {\n          const result = await onProgressChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      }\n\n      // If operation is failed - return old state\n      if (!operationSuccess) {\n        setFailedTask(originalSelectedTask);\n      }\n    };\n\n    if (\n      !isMoving &&\n      (ganttEvent.action === \"move\" ||\n        ganttEvent.action === \"end\" ||\n        ganttEvent.action === \"start\" ||\n        ganttEvent.action === \"progress\") &&\n      svg?.current\n    ) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [\n    ganttEvent,\n    xStep,\n    initEventX1Delta,\n    onProgressChange,\n    timeStep,\n    onDateChange,\n    svg,\n    isMoving,\n    point,\n    rtl,\n    setFailedTask,\n    setGanttEvent,\n  ]);\n\n  /**\n   * Method is Start point of task change\n   */\n  const handleBarEventStart = async (\n    action: GanttContentMoveAction,\n    task: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    if (!event) {\n      if (action === \"select\") {\n        setSelectedTask(task.id);\n      }\n    }\n    // Keyboard events\n    else if (isKeyboardEvent(event)) {\n      if (action === \"delete\") {\n        if (onDelete) {\n          try {\n            const result = await onDelete(task);\n            if (result !== undefined && result) {\n              setGanttEvent({ action, changedTask: task });\n            }\n          } catch (error) {\n            console.error(\"Error on Delete. \" + error);\n          }\n        }\n      }\n    }\n    // Mouse Events\n    else if (action === \"mouseenter\") {\n      if (!ganttEvent.action) {\n        setGanttEvent({\n          action,\n          changedTask: task,\n          originalSelectedTask: task,\n        });\n      }\n    } else if (action === \"mouseleave\") {\n      if (ganttEvent.action === \"mouseenter\") {\n        setGanttEvent({ action: \"\" });\n      }\n    } else if (action === \"dblclick\") {\n      !!onDoubleClick && onDoubleClick(task);\n    } else if (action === \"click\") {\n      !!onClick && onClick(task);\n    }\n    // Change task event start\n    else if (action === \"move\") {\n      if (!svg?.current || !point) return;\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg.current.getScreenCTM()?.inverse()\n      );\n      setInitEventX1Delta(cursor.x - task.x1);\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    } else {\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    }\n  };\n\n  return (\n    <g className=\"content\">\n      <g className=\"arrows\" fill={arrowColor} stroke={arrowColor}>\n        {tasks.map(task => {\n          return task.barChildren.map(child => {\n            return (\n              <Arrow\n                key={`Arrow from ${task.id} to ${tasks[child.index].id}`}\n                taskFrom={task}\n                taskTo={tasks[child.index]}\n                rowHeight={rowHeight}\n                taskHeight={taskHeight}\n                arrowIndent={arrowIndent}\n                rtl={rtl}\n              />\n            );\n          });\n        })}\n      </g>\n      <g className=\"bar\" fontFamily={fontFamily} fontSize={fontSize}>\n        {tasks.map(task => {\n          return (\n            <TaskItem\n              task={task}\n              arrowIndent={arrowIndent}\n              taskHeight={taskHeight}\n              isProgressChangeable={!!onProgressChange && !task.isDisabled}\n              isDateChangeable={!!onDateChange && !task.isDisabled}\n              isDelete={!task.isDisabled}\n              onEventStart={handleBarEventStart}\n              key={task.id}\n              isSelected={!!selectedTask && task.id === selectedTask.id}\n              rtl={rtl}\n            />\n          );\n        })}\n      </g>\n    </g>\n  );\n};\n", "import React, { useRef, useEffect } from \"react\";\nimport { GridProps, Grid } from \"../grid/grid\";\nimport { CalendarProps, Calendar } from \"../calendar/calendar\";\nimport { TaskGanttContentProps, TaskGanttContent } from \"./task-gantt-content\";\nimport styles from \"./gantt.module.css\";\n\nexport type TaskGanttProps = {\n  gridProps: GridProps;\n  calendarProps: CalendarProps;\n  barProps: TaskGanttContentProps;\n  ganttHeight: number;\n  scrollY: number;\n  scrollX: number;\n};\nexport const TaskGantt: React.FC<TaskGanttProps> = ({\n  gridProps,\n  calendarProps,\n  barProps,\n  ganttHeight,\n  scrollY,\n  scrollX,\n}) => {\n  const ganttSVGRef = useRef<SVGSVGElement>(null);\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  const verticalGanttContainerRef = useRef<HTMLDivElement>(null);\n  const newBarProps = { ...barProps, svg: ganttSVGRef };\n\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  useEffect(() => {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n\n  return (\n    <div\n      className={styles.ganttVerticalContainer}\n      ref={verticalGanttContainerRef}\n      dir=\"ltr\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={gridProps.svgWidth}\n        height={calendarProps.headerHeight}\n        fontFamily={barProps.fontFamily}\n      >\n        <Calendar {...calendarProps} />\n      </svg>\n      <div\n        ref={horizontalContainerRef}\n        className={styles.horizontalContainer}\n        style={\n          ganttHeight\n            ? { height: ganttHeight, width: gridProps.svgWidth }\n            : { width: gridProps.svgWidth }\n        }\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={gridProps.svgWidth}\n          height={barProps.rowHeight * barProps.tasks.length}\n          fontFamily={barProps.fontFamily}\n          ref={ganttSVGRef}\n        >\n          <Grid {...gridProps} />\n          <TaskGanttContent {...newBarProps} />\n        </svg>\n      </div>\n    </div>\n  );\n};\n", "import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./horizontal-scroll.module.css\";\n\nexport const HorizontalScroll: React.FC<{\n  scroll: number;\n  svgWidth: number;\n  taskListWidth: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({ scroll, svgWidth, taskListWidth, rtl, onScroll }) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      dir=\"ltr\"\n      style={{\n        margin: rtl\n          ? `0px ${taskListWidth}px 0px 0px`\n          : `0px 0px 0px ${taskListWidth}px`,\n      }}\n      className={styles.scrollWrapper}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ width: svgWidth }} className={styles.scroll} />\n    </div>\n  );\n};\n", "import React, {\n  useState,\n  SyntheticEvent,\n  useRef,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport { ViewMode, GanttProps, Task } from \"../../types/public-types\";\nimport { GridProps } from \"../grid/grid\";\nimport { ganttDateRange, seedDates } from \"../../helpers/date-helper\";\nimport { CalendarProps } from \"../calendar/calendar\";\nimport { TaskGanttContentProps } from \"./task-gantt-content\";\nimport { TaskListHeaderDefault } from \"../task-list/task-list-header\";\nimport { TaskListTableDefault } from \"../task-list/task-list-table\";\nimport { StandardTooltipContent, Tooltip } from \"../other/tooltip\";\nimport { VerticalScroll } from \"../other/vertical-scroll\";\nimport { TaskListProps, TaskList } from \"../task-list/task-list\";\nimport { TaskGantt } from \"./task-gantt\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { convertToBarTasks } from \"../../helpers/bar-helper\";\nimport { GanttEvent } from \"../../types/gantt-task-actions\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport { HorizontalScroll } from \"../other/horizontal-scroll\";\nimport { removeHiddenTasks, sortTasks } from \"../../helpers/other-helper\";\nimport styles from \"./gantt.module.css\";\n\nexport const Gantt: React.FunctionComponent<GanttProps> = ({\n  tasks,\n  headerHeight = 50,\n  columnWidth = 60,\n  listCellWidth = \"155px\",\n  rowHeight = 50,\n  ganttHeight = 0,\n  viewMode = ViewMode.Day,\n  preStepsCount = 1,\n  locale = \"en-GB\",\n  barFill = 60,\n  barCornerRadius = 3,\n  barProgressColor = \"#a3a3ff\",\n  barProgressSelectedColor = \"#8282f5\",\n  barBackgroundColor = \"#b8c2cc\",\n  barBackgroundSelectedColor = \"#aeb8c2\",\n  projectProgressColor = \"#7db59a\",\n  projectProgressSelectedColor = \"#59a985\",\n  projectBackgroundColor = \"#fac465\",\n  projectBackgroundSelectedColor = \"#f7bb53\",\n  milestoneBackgroundColor = \"#f1c453\",\n  milestoneBackgroundSelectedColor = \"#f29e4c\",\n  rtl = false,\n  handleWidth = 8,\n  timeStep = 300000,\n  arrowColor = \"grey\",\n  fontFamily = \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\",\n  fontSize = \"14px\",\n  arrowIndent = 20,\n  todayColor = \"rgba(252, 248, 227, 0.5)\",\n  viewDate,\n  TooltipContent = StandardTooltipContent,\n  TaskListHeader = TaskListHeaderDefault,\n  TaskListTable = TaskListTableDefault,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onClick,\n  onDelete,\n  onSelect,\n  onExpanderClick,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const taskListRef = useRef<HTMLDivElement>(null);\n  const [dateSetup, setDateSetup] = useState<DateSetup>(() => {\n    const [startDate, endDate] = ganttDateRange(tasks, viewMode, preStepsCount);\n    return { viewMode, dates: seedDates(startDate, endDate, viewMode) };\n  });\n  const [currentViewDate, setCurrentViewDate] = useState<Date | undefined>(\n    undefined\n  );\n\n  const [taskListWidth, setTaskListWidth] = useState(0);\n  const [svgContainerWidth, setSvgContainerWidth] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(ganttHeight);\n  const [barTasks, setBarTasks] = useState<BarTask[]>([]);\n  const [ganttEvent, setGanttEvent] = useState<GanttEvent>({\n    action: \"\",\n  });\n  const taskHeight = useMemo(\n    () => (rowHeight * barFill) / 100,\n    [rowHeight, barFill]\n  );\n\n  const [selectedTask, setSelectedTask] = useState<BarTask>();\n  const [failedTask, setFailedTask] = useState<BarTask | null>(null);\n\n  const svgWidth = dateSetup.dates.length * columnWidth;\n  const ganttFullHeight = barTasks.length * rowHeight;\n\n  const [scrollY, setScrollY] = useState(0);\n  const [scrollX, setScrollX] = useState(-1);\n  const [ignoreScrollEvent, setIgnoreScrollEvent] = useState(false);\n\n  // task change events\n  useEffect(() => {\n    let filteredTasks: Task[];\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n    filteredTasks = filteredTasks.sort(sortTasks);\n    const [startDate, endDate] = ganttDateRange(\n      filteredTasks,\n      viewMode,\n      preStepsCount\n    );\n    let newDates = seedDates(startDate, endDate, viewMode);\n    if (rtl) {\n      newDates = newDates.reverse();\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n    setDateSetup({ dates: newDates, viewMode });\n    setBarTasks(\n      convertToBarTasks(\n        filteredTasks,\n        newDates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      )\n    );\n  }, [\n    tasks,\n    viewMode,\n    preStepsCount,\n    rowHeight,\n    barCornerRadius,\n    columnWidth,\n    taskHeight,\n    handleWidth,\n    barProgressColor,\n    barProgressSelectedColor,\n    barBackgroundColor,\n    barBackgroundSelectedColor,\n    projectProgressColor,\n    projectProgressSelectedColor,\n    projectBackgroundColor,\n    projectBackgroundSelectedColor,\n    milestoneBackgroundColor,\n    milestoneBackgroundSelectedColor,\n    rtl,\n    scrollX,\n    onExpanderClick,\n  ]);\n\n  useEffect(() => {\n    if (\n      viewMode === dateSetup.viewMode &&\n      ((viewDate && !currentViewDate) ||\n        (viewDate && currentViewDate?.valueOf() !== viewDate.valueOf()))\n    ) {\n      const dates = dateSetup.dates;\n      const index = dates.findIndex(\n        (d, i) =>\n          viewDate.valueOf() >= d.valueOf() &&\n          i + 1 !== dates.length &&\n          viewDate.valueOf() < dates[i + 1].valueOf()\n      );\n      if (index === -1) {\n        return;\n      }\n      setCurrentViewDate(viewDate);\n      setScrollX(columnWidth * index);\n    }\n  }, [\n    viewDate,\n    columnWidth,\n    dateSetup.dates,\n    dateSetup.viewMode,\n    viewMode,\n    currentViewDate,\n    setCurrentViewDate,\n  ]);\n\n  useEffect(() => {\n    const { changedTask, action } = ganttEvent;\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({ action: \"\" });\n        setBarTasks(barTasks.filter(t => t.id !== changedTask.id));\n      } else if (\n        action === \"move\" ||\n        action === \"end\" ||\n        action === \"start\" ||\n        action === \"progress\"\n      ) {\n        const prevStateTask = barTasks.find(t => t.id === changedTask.id);\n        if (\n          prevStateTask &&\n          (prevStateTask.start.getTime() !== changedTask.start.getTime() ||\n            prevStateTask.end.getTime() !== changedTask.end.getTime() ||\n            prevStateTask.progress !== changedTask.progress)\n        ) {\n          // actions for change\n          const newTaskList = barTasks.map(t =>\n            t.id === changedTask.id ? changedTask : t\n          );\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n\n  useEffect(() => {\n    if (failedTask) {\n      setBarTasks(barTasks.map(t => (t.id !== failedTask.id ? t : failedTask)));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n\n  useEffect(() => {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n\n  useEffect(() => {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks, headerHeight, rowHeight]);\n\n  // scroll events\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        let newScrollY = scrollY + event.deltaY;\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    // subscribe if scroll is necessary\n    wrapperRef.current?.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrapperRef.current?.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, [\n    wrapperRef,\n    scrollY,\n    scrollX,\n    ganttHeight,\n    svgWidth,\n    rtl,\n    ganttFullHeight,\n  ]);\n\n  const handleScrollY = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n      setIgnoreScrollEvent(true);\n    } else {\n      setIgnoreScrollEvent(false);\n    }\n  };\n\n  const handleScrollX = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n      setIgnoreScrollEvent(true);\n    } else {\n      setIgnoreScrollEvent(false);\n    }\n  };\n\n  /**\n   * Handles arrow keys events and transform it to new scroll\n   */\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    let newScrollY = scrollY;\n    let newScrollX = scrollX;\n    let isX = true;\n    switch (event.key) {\n      case \"Down\": // IE/Edge specific value\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n      case \"Up\": // IE/Edge specific value\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n      case \"Right\": // IE/Edge specific value\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n      setScrollY(newScrollY);\n    }\n    setIgnoreScrollEvent(true);\n  };\n\n  /**\n   * Task select event\n   */\n  const handleSelectedTask = (taskId: string) => {\n    const newSelectedTask = barTasks.find(t => t.id === taskId);\n    const oldSelectedTask = barTasks.find(\n      t => !!selectedTask && t.id === selectedTask.id\n    );\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n    setSelectedTask(newSelectedTask);\n  };\n  const handleExpanderClick = (task: Task) => {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick({ ...task, hideChildren: !task.hideChildren });\n    }\n  };\n  const gridProps: GridProps = {\n    columnWidth,\n    svgWidth,\n    tasks: tasks,\n    rowHeight,\n    dates: dateSetup.dates,\n    todayColor,\n    rtl,\n  };\n  const calendarProps: CalendarProps = {\n    dateSetup,\n    locale,\n    viewMode,\n    headerHeight,\n    columnWidth,\n    fontFamily,\n    fontSize,\n    rtl,\n  };\n  const barProps: TaskGanttContentProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent,\n    selectedTask,\n    rowHeight,\n    taskHeight,\n    columnWidth,\n    arrowColor,\n    timeStep,\n    fontFamily,\n    fontSize,\n    arrowIndent,\n    svgWidth,\n    rtl,\n    setGanttEvent,\n    setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange,\n    onProgressChange,\n    onDoubleClick,\n    onClick,\n    onDelete,\n  };\n\n  const tableProps: TaskListProps = {\n    rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily,\n    fontSize,\n    tasks: barTasks,\n    locale,\n    headerHeight,\n    scrollY,\n    ganttHeight,\n    horizontalContainerClass: styles.horizontalContainer,\n    selectedTask,\n    taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader,\n    TaskListTable,\n  };\n  return (\n    <div>\n      <div\n        className={styles.wrapper}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        ref={wrapperRef}\n      >\n        {listCellWidth && <TaskList {...tableProps} />}\n        <TaskGantt\n          gridProps={gridProps}\n          calendarProps={calendarProps}\n          barProps={barProps}\n          ganttHeight={ganttHeight}\n          scrollY={scrollY}\n          scrollX={scrollX}\n        />\n        {ganttEvent.changedTask && (\n          <Tooltip\n            arrowIndent={arrowIndent}\n            rowHeight={rowHeight}\n            svgContainerHeight={svgContainerHeight}\n            svgContainerWidth={svgContainerWidth}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            scrollX={scrollX}\n            scrollY={scrollY}\n            task={ganttEvent.changedTask}\n            headerHeight={headerHeight}\n            taskListWidth={taskListWidth}\n            TooltipContent={TooltipContent}\n            rtl={rtl}\n            svgWidth={svgWidth}\n          />\n        )}\n        <VerticalScroll\n          ganttFullHeight={ganttFullHeight}\n          ganttHeight={ganttHeight}\n          headerHeight={headerHeight}\n          scroll={scrollY}\n          onScroll={handleScrollY}\n          rtl={rtl}\n        />\n      </div>\n      <HorizontalScroll\n        svgWidth={svgWidth}\n        taskListWidth={taskListWidth}\n        scroll={scrollX}\n        rtl={rtl}\n        onScroll={handleScrollX}\n      />\n    </div>\n  );\n};\n"],
  "mappings": "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",
  "names": ["ViewMode", "intlDTCache", "getCachedDateTimeFormat", "locString", "opts", "key", "JSON", "stringify", "dtf", "Intl", "DateTimeFormat", "addToDate", "date", "quantity", "scale", "newDate", "Date", "getFullYear", "getMonth", "getDate", "getHours", "getMinutes", "getSeconds", "getMilliseconds", "startOfDate", "scores", "shouldReset", "_scale", "maxScore", "indexOf", "ganttDateRange", "tasks", "viewMode", "preStepsCount", "newStartDate", "start", "newEndDate", "task", "end", "Year", "Month", "Week", "getMonday", "Day", "QuarterDay", "HalfDay", "Hour", "seedDates", "startDate", "endDate", "currentDate", "dates", "push", "getLocaleMonth", "locale", "bottomValue", "month", "format", "replace", "toLocaleUpperCase", "getLocalDayOfWeek", "weekday", "day", "getDay", "diff", "setDate", "getWeekNumberISO8601", "tmpDate", "valueOf", "dayNumber", "firstThursday", "setMonth", "weekNumber", "Math", "ceil", "toString", "length", "getDaysInMonth", "year", "TaskListHeaderDefault", "headerHeight", "fontFamily", "fontSize", "rowWidth", "React", "className", "styles", "ganttTable", "style", "ganttTable_Header", "height", "ganttTable_HeaderItem", "minWidth", "ganttTable_HeaderSeparator", "marginTop", "localeDateStringCache", "toLocaleDateStringFactory", "dateTimeOptions", "lds", "toLocaleDateString", "TaskListTableDefault", "rowHeight", "onExpanderClick", "useMemo", "taskListWrapper", "map", "t", "expanderSymbol", "hideChildren", "taskListTableRow", "id", "taskListCell", "maxWidth", "title", "name", "taskListNameWrapper", "taskListExpander", "taskListEmptyExpander", "onClick", "Tooltip", "rtl", "svgContainerHeight", "svgContainerWidth", "scrollX", "scrollY", "arrowIndent", "taskListWidth", "TooltipContent", "tooltipRef", "useRef", "useState", "relatedY", "setRelatedY", "relatedX", "setRelatedX", "useEffect", "current", "tooltipHeight", "offsetHeight", "tooltipWidth", "offsetWidth", "newRelatedY", "index", "newRelatedX", "x1", "x2", "tooltipLeftmostPoint", "fullChartWidth", "tooltipLowerPoint", "ref", "tooltipDetailsContainer", "tooltipDetailsContainerHidden", "left", "top", "StandardTooltipContent", "tooltipDefaultContainer", "getTime", "tooltipDefaultContainerParagraph", "progress", "VerticalScroll", "scroll", "ganttHeight", "ganttFullHeight", "onScroll", "scrollRef", "scrollTop", "marginLeft", "width", "TaskList", "selectedTask", "setSelectedTask", "taskListRef", "horizontalContainerClass", "TaskListHeader", "TaskListTable", "horizontalContainerRef", "headerProps", "selectedTaskId", "tableProps", "GridBody", "svgWidth", "columnWidth", "todayColor", "y", "gridRows", "rowLines", "x", "y1", "y2", "gridRowLine", "gridRow", "now", "tickX", "ticks", "today", "i", "gridTick", "fill", "Grid", "props", "TopPartOfCalendar", "value", "x1Line", "y1Line", "y2Line", "xText", "yText", "calendarTopTick", "calendarTopText", "Calendar", "dateSetup", "getCalendarValuesForYear", "topValues", "bottomValues", "topDefaultHeight", "calendarBottomText", "topValue", "getCalendarValuesForMonth", "getCalendarValuesForWeek", "weeksCount", "getCalendarValuesForDay", "getCalendarValuesForPartOfDay", "hour", "getCalendarValuesForHour", "displayDate", "topPosition", "calendarHeader", "Arrow", "taskFrom", "taskTo", "taskHeight", "path", "trianglePoints", "drownPathAndTriangleRTL", "drownPathAndTriangle", "strokeWidth", "d", "points", "indexCompare", "taskToEndPosition", "taskFromEndPosition", "taskFromHorizontalOffsetValue", "taskToHorizontalOffsetValue", "convertToBarTasks", "barCornerRadius", "handleWidth", "barProgressColor", "barProgressSelectedColor", "barBackgroundColor", "barBackgroundSelectedColor", "projectProgressColor", "projectProgressSelectedColor", "projectBackgroundColor", "projectBackgroundSelectedColor", "milestoneBackgroundColor", "milestoneBackgroundSelectedColor", "barTasks", "convertToBarTask", "dependencies", "j", "dependence", "findIndex", "barChildren", "barTask", "type", "convertToMilestone", "convertToBar", "taskXCoordinateRTL", "taskXCoordinate", "typeInternal", "progressWithByParams", "progressWidth", "progressX", "taskYCoordinate", "undefined", "backgroundColor", "backgroundSelectedColor", "progressColor", "progressSelectedColor", "rotatedHeight", "xDate", "remainderMillis", "percentOfInterval", "taskX1", "taskX2", "progressByX", "barWidth", "progressPercent", "round", "progressByXRTL", "getProgressPoint", "taskY", "point", "join", "startByX", "xStep", "steps", "additionalXValue", "newX", "endByX", "moveByX", "newX1", "newX2", "dateByX", "taskX", "taskDate", "timeStep", "getTimezoneOffset", "handleTaskBySVGMouseEvent", "svgX", "action", "initEventX1Delta", "result", "handleTaskBySVGMouseEventForMilestone", "handleTaskBySVGMouseEventForBar", "changedTask", "isChanged", "newMoveX1", "newMoveX2", "isKeyboardEvent", "event", "removeHiddenTasks", "groupedTasks", "filter", "_loop", "groupedTask", "children", "getChildren", "taskList", "project", "taskChildren", "forEach", "concat", "sortTasks", "taskA", "taskB", "orderA", "displayOrder", "Number", "MAX_VALUE", "orderB", "BarDisplay", "isSelected", "onMouseDown", "getProcessColor", "getBarColor", "ry", "rx", "barBackground", "BarDateHandle", "barHandle", "BarProgressHandle", "progressPoint", "Bar", "isProgressChangeable", "isDateChangeable", "onEventStart", "handleHeight", "barWrapper", "tabIndex", "e", "BarSmall", "Milestone", "transform", "milestoneWrapper", "milestoneBackground", "Project", "barColor", "processColor", "projectWith", "projectLeftTriangle", "projectRightTriangle", "projectWrapper", "projectBackground", "projectTop", "TaskItem", "isDelete", "textRef", "taskItem", "setTaskItem", "isTextInside", "setIsTextInside", "getBBox", "getX", "hasChild", "onKeyDown", "stopPropagation", "onMouseEnter", "onMouseLeave", "onDoubleClick", "onFocus", "barLabel", "barLabelOutside", "TaskGanttContent", "ganttEvent", "svg", "arrowColor", "setGanttEvent", "setFailedTask", "onDateChange", "onProgressChange", "onDelete", "createSVGPoint", "setXStep", "setInitEventX1Delta", "isMoving", "setIsMoving", "dateDelta", "newXStep", "handleMouseMove", "preventDefault", "clientX", "cursor", "matrixTransform", "getScreenCTM", "inverse", "handleMouseUp", "operationSuccess", "originalSelectedTask", "newChangedTask", "isNotLikeOriginal", "removeEventListener", "addEventListener", "handleBarEventStart", "error", "console", "stroke", "child", "isDisabled", "TaskGantt", "gridProps", "calendarProps", "barProps", "ganttSVGRef", "verticalGanttContainerRef", "newBarProps", "scrollLeft", "ganttVerticalContainer", "dir", "xmlns", "horizontalContainer", "HorizontalScroll", "margin", "scrollWrapper", "Gantt", "listCellWidth", "barFill", "viewDate", "onSelect", "wrapperRef", "setDateSetup", "currentViewDate", "setCurrentViewDate", "setTaskListWidth", "setSvgContainerWidth", "setSvgContainerHeight", "setBarTasks", "failedTask", "setScrollY", "setScrollX", "ignoreScrollEvent", "setIgnoreScrollEvent", "filteredTasks", "sort", "newDates", "reverse", "prevStateTask", "find", "newTaskList", "handleWheel", "shiftKey", "deltaX", "scrollMove", "deltaY", "newScrollX", "newScrollY", "passive", "handleScrollY", "currentTarget", "handleScrollX", "handleKeyDown", "isX", "handleSelectedTask", "taskId", "newSelectedTask", "oldSelectedTask", "handleExpanderClick", "wrapper"]
}
